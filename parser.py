import requests
from bs4 import BeautifulSoup
import re
from collections import defaultdict


def parse_input_file(file_path):
    """–ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ URL —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –ø–æ –º–µ—Å—è—Ü–∞–º."""
    month_data = defaultdict(list)  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –º–µ—Å—è—Ü–∞–º
    current_month = None

    with open(file_path, 'r', encoding='utf-8') as file:
        for line in file:
            line = line.strip()
            if not line:
                continue

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –¥–∞—Ç–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, "04.2025")
            if re.match(r'^\d{2}\.\d{4}$', line):
                current_month = line
                continue

            # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –∏–∑ —Å—Ç—Ä–æ–∫ –≤–∏–¥–∞ "[1$] –ù–∞–∑–≤–∞–Ω–∏–µ: https://example.com"
            match = re.match(r'^\d+\)\s+\[\d+\$\]\s+.+?:\s+(https?://\S+)', line)
            if match and current_month:
                url = match.group(1)
                month_data[current_month].append(url)

    return month_data


def check_product_phase(url):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ñ—Ä–∞–∑–∞ 'Product Phase: released'."""
    try:
        response = requests.get(url, timeout=10)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏ HTTP

        soup = BeautifulSoup(response.text, 'html.parser')
        return "Product Phase: released" in soup.get_text()
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {url}: {str(e)}")
        return False


def main():
    input_file = "input.txt"  # –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ñ–∞–π–ª—É
    output_file = "results.txt"

    # –ü–∞—Ä—Å–∏–º –≤—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
    month_data = parse_input_file(input_file)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π URL –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    with open(output_file, 'w', encoding='utf-8') as f:
        for month, urls in month_data.items():
            f.write(f"{month}\n")
            print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—è—Ü: {month}")

            for url in urls:
                is_released = check_product_phase(url)
                status = "‚úÖ Released" if is_released else "‚ùå Not Released"
                f.write(f"{url} - {status}\n")
                print(f"   {url} - {status}")

            f.write("\n")  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É –º–µ—Å—è—Ü–∞–º–∏


if __name__ == "__main__":
    main()